// Generated by CoffeeScript 1.9.3
(function() {
  var fs, getLink, getLinkArray, path, ref;

  path = require('path');

  fs = require('fs');

  ref = require('documentdb-utils'), getLink = ref.getLink, getLinkArray = ref.getLinkArray;

  module.exports = function(server, se, callback) {
    var getStandardCallback;
    getStandardCallback = function(req, res, next) {
      var standardCallback;
      standardCallback = function(err, response) {
        if (err != null) {
          return res.send(err.code, err.body);
        } else {
          res.send(200, response);
          return next();
        }
      };
      return standardCallback;
    };
    server.get('/hello', function(req, res, next) {
      return res.send(200, {
        hello: 'world'
      });
    });
    server.post('/login', function(req, res, next) {
      var password, username;
      username = req.authorization.basic.username || req.body.username;
      password = req.authorization.basic.password || req.body.password;
      return se.login(username, password, getStandardCallback(req, res, next));
    });
    server.post('/query', function(req, res, next) {
      var query, sessionID;
      sessionID = req.body.sessionID;
      query = req.body.query;
      return se.query(sessionID, query, getStandardCallback(req, res, next));
    });
    server.post('/upsert-user', function(req, res, next) {
      var sessionID, user;
      sessionID = req.body.sessionID;
      user = req.body.user;
      return se.upsertUser(sessionID, user, getStandardCallback(req, res, next));
    });
    server.post('/upsert', function(req, res, next) {
      var sessionID, upserts;
      sessionID = req.body.sessionID;
      if (req.body.upsert != null) {
        upserts = [req.body.upsert];
      } else {
        upserts = req.body.upserts;
      }
      return se.upsert(sessionID, upserts, null, getStandardCallback(req, res, next));
    });
    server.post('/delete-partition', function(req, res, next) {
      var password, username;
      username = req.authorization.basic.username;
      password = req.authorization.basic.password;
      return se.deletePartition(username, password, getStandardCallback(req, res, next));
    });
    server.post('/initialize-partition', function(req, res, next) {
      var password, username;
      username = req.authorization.basic.username;
      password = req.authorization.basic.password;
      return se.initializePartition(username, password, getStandardCallback(req, res, next));
    });
    return callback();
  };

}).call(this);
